#!/usr/bin/env python3
"""
Program name: ascending_order.py
Student number: 

Given a 2D list, remove out of order entries.
"""
def ascending_order_multi(citizen_cases):
    """Remove out of order updates out of a list of lists of updates

       Args:
        citizen_cases (list): List of citixen cases, each of them containing a nested list with the citizen's updates 
    """
    for idx, updat in enumerate(citizen_cases):
      citizen_cases[idx] = ascending_order(updat)
    return citizen_cases

def ascending_order(updates):
    """Remove out of order entries of the list of updates.

    Args:
        updates (list): List from which zeroes will be removed.
    """
    count=0 # act as index counter  
    while updates: # lopp till list empty 
      if count<len(updates)-1:
        if updates[count]>updates[count+1]:  # check it is smaller than precedor 
          updates.pop(count+1) # remove that  
        else:
          count+=1
      else:
        break     # if all are done, then break the loop
    return updates  
    

def main():
    lis_1 = [0, 2, 6, 0, 23, 8, 45, 7, 0 ]
    print(lis_1)
    ascending_order (lis_1)
    print("List in ascending order: ", lis_1)

    lis_2 = [[ 1, 34, 45, 6, 124, 0, 134], [0], [0, 930, 0 ]]
    print(lis_2)
    ascending_order_multi(lis_2)
    print("All Lists, each of them in ascending order: ", lis_2)

    
if __name__ == "__main__":
    main()